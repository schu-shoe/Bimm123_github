---
title: "Class17: mini project"
author: "Siena Schumaker (A16520296)"
format: pdf
---

## Mini Project: COVID 19- vaccination records

The goal of this hands-on mini-project is to examine and compare the Covid-19 vaccination rates around San Diego.

We will start by downloading the most recently dated “Statewide COVID-19 Vaccines Administered by ZIP Code” CSV file from: https://data.ca.gov/dataset/covid-19-vaccine-progress-dashboard-data-by-zip-code

#data import

```{r}
vax <- read.csv("covid19vaccinesbyzipcode_test.csv")
head(vax)
```

>Q1. What column details the total number of people fully vaccinated? 

vax$persons_fully_vaccinated

>Q2. What column details the Zip code tabulation area? 

vax$zip_code_tabulation_area

>Q3. What is the earliest date in this dataset? 

```{r}
head(sort (vax$as_of_date),1)
```

The earliest date is 2021-01-05 (January 5, 2021)

>Q4. What is the latest date in this dataset?

```{r}
head(sort (vax$as_of_date, decreasing=T),1)
```

The latest date is 2023-02-28 (February 28, 2023)


We can use the skim() function for a quick overview of a new dataset like this 

```{r}
#not calling whole package just a certain part of it
skimr::skim(vax)
```

>Q5. How many numeric columns are in this dataset? 

13

>Q6. Note that there are “missing values” in the dataset. How many NA values there in the persons_fully_vaccinated column? 

```{r}
sum(is.na(vax$persons_fully_vaccinated))
```

There are 16525 NA values

>Q7. What percent of persons_fully_vaccinated values are missing (to 2 significant figures)?

```{r}
#rounded to 2 sig figs
round(sum(is.na(vax$persons_fully_vaccinated))/nrow(vax)*100,1)
```

8.3% of fully vaccinated persons values are missing

>Q8. [Optional]: Why might this data be missing?

Some areas don't report their data


# Working with dates

The lubridate package makes working with dates and times in R much less of a pain. 

```{r}
library(lubridate)
```

```{r}
today()
```

We can now magically do math with dates

```{r}
today()-ymd("2021-01-05")
```

How old I am in days

```{r}
today()-ymd("2002-04-26")
```


```{r}
# Specify that we are using the year-month-day format
vax$as_of_date <- ymd(vax$as_of_date)
```

How many days have passed since the first vaccination reported in this dataset?

```{r}
today() - vax$as_of_date[1]
```

>Q. How many days does the dataset span

```{r}
vax$as_of_date[nrow(vax)] - vax$as_of_date[1]
```

The dataset spans 784 days

>Q9. How many days have passed since the last update of the dataset? 

```{r}
today() - vax$as_of_date[nrow(vax)]
```

7 days have passed since the last update of the dataset

>Q10. How many unique dates are in the dataset (i.e. how many different dates are detailed)? 

```{r}
length(unique(vax$as_of_date))
```

There are 113 unique dates in the dataset

# Working with zip codes

```{r}
library(zipcodeR)
```

ZIP codes are also rather annoying things to work with as they are numeric but not in the conventional sense of doing math. 

Just like dates we have special packages to help us woth with ZIP codes.

```{r}
geocode_zip('95831')
```

Calculate the distance between the centroids of any two ZIP codes in miles, e.g.

```{r}
zip_distance('92037','95831')
```

More usefully, we can pull census data about ZIP code areas (including median household income etc.). For example:

```{r}
reverse_zipcode(c('92037', "95831") )
```

# Focus on the San Diego area

```{r}
# Subset to San Diego county only areas
sd <- vax[ vax$county == "San Diego" , ]
nrow(sd)
```

We can use dplyr to do the same thing as above

```{r}
library(dplyr)

sd <- filter(vax, county == "San Diego")

nrow(sd)

```

Using dplyr is often more convenient when we are subsetting across multiple criteria - for example all San Diego county areas with a population of over 10,000.

```{r}
sd.10 <- filter(vax, county == "San Diego" &
                age5_plus_population > 10000)

nrow(sd.10)
```


>Q11. How many distinct zip codes are listed for San Diego County? 

```{r}
n_distinct(sd$zip_code_tabulation_area)
```

There are 107 distinct zip codes listed for SD county

>Q12. What San Diego County Zip code area has the largest 12 + Population in this dataset? 


```{r}
sd$zip_code_tabulation_area[which.max(sd$age12_plus_population)]
```

Zip code area 92154

>Q13. What is the overall average “Percent of Population Fully Vaccinated” value for all San Diego “County” as of “2023-02-28”? 

```{r}
sd.today <- filter(sd, as_of_date=="2023-02-28")
mean(sd.today$percent_of_population_fully_vaccinated, na.rm=T)
```


>Q14. Using either ggplot or base R graphics make a summary figure that shows the distribution of Percent of Population Fully Vaccinated values as of “2023-02-28”?

```{r}
library(ggplot2)
ggplot(sd.today)+
  aes(percent_of_population_fully_vaccinated)+
  geom_histogram(bins=20, na.rm=T, col="darkblue", fill="skyblue")+
  labs (x="Percent of people fully vaccinated on 2023-02-28", y= "Count (ZIP code areas)", title="Histogram of Vaccination Rate Across San Diego County")+
  theme_classic()
```

# Focus on UCSD/La Jolla

```{r}
ucsd <- filter(sd, zip_code_tabulation_area=="92037")
ucsd[1,]$age5_plus_population

head(ucsd)
```

>Q15. Using ggplot make a graph of the vaccination rate time course for the 92037 ZIP code area:

```{r}
ggplot(ucsd) +
  aes(as_of_date,
      percent_of_population_fully_vaccinated) +
  geom_point() +
  geom_line(group=1) +
  ylim(c(0,1)) +
  labs(x="Date", y="Percent Vaccinated", title="Vaccination rate for La Jolla CA 92109")

```

#Comparing to similarly sized areas

Let’s return to the full dataset and look across every zip code area with a population at least as large as that of 92037 on as_of_date 

>Q16. Calculate the mean “Percent of Population Fully Vaccinated” for ZIP code areas with a population as large as 92037 (La Jolla) as_of_date “2023-02-28”. Add this as a straight horizontal line to your plot from above with the geom_hline() function?

```{r}
# Subset to all CA areas with a population as large as 92037
vax.36 <- filter(vax, age5_plus_population > 36144 &
                as_of_date == "2023-02-28")
```

```{r}
ave <- mean(vax.36$percent_of_population_fully_vaccinated)
ave
```

```{r}
ggplot(ucsd) +
  aes(as_of_date,
      percent_of_population_fully_vaccinated) +
  geom_point() +
  geom_line(group=1) +
  ylim(c(0,1)) +
  labs(x="Date", y="Percent Vaccinated", title="Vaccination rate for La Jolla CA 92109")+
  geom_hline(yintercept=ave, col="red", linetype=2)
```

>Q17. What is the 6 number summary (Min, 1st Qu., Median, Mean, 3rd Qu., and Max) of the “Percent of Population Fully Vaccinated” values for ZIP code areas with a population as large as 92037 (La Jolla) as_of_date “202-02-28”?

```{r}
summary(vax.36$percent_of_population_fully_vaccinated)
```


>Q18. Using ggplot generate a histogram of this data.

```{r}
ggplot(vax.36) + 
  aes(percent_of_population_fully_vaccinated)+geom_histogram(bins=30, col="black", fill="lightgray", na.rm=T)+
  theme_classic()+xlim(0,1)
```

>Q19. Is the 92109 and 92040 ZIP code areas above or below the average value you calculated for all these above?

```{r}
x <- filter(vax.36, zip_code_tabulation_area %in% c("92109", "92040"))
x$percent_of_population_fully_vaccinated
x$percent_of_population_fully_vaccinated>mean(vax.36$percent_of_population_fully_vaccinated)
```

Both the 92109 and 92040 ZIP code areas are below the average value 

>Q20. Finally make a time course plot of vaccination progress for all areas in the full dataset with a age5_plus_population > 36144.


```{r}
vax.36.all <- filter(vax, age5_plus_population>36144)


ggplot(vax.36.all) +
  aes(as_of_date,
      percent_of_population_fully_vaccinated, 
      group=zip_code_tabulation_area) +
  geom_line(alpha=0.2, color="blue", na.rm=T) +
  ylim(0,1) +
  labs(x="Date", y="Percent Vaccinated",
       title="Vaccination rate across California",
       subtitle="Only areas with a population above 36k are shown") +
  geom_hline(yintercept = ave, linetype=2)
```

>Q21. How do you feel about traveling for Spring Break and meeting for in-person class afterwards?

Not as safe as I should feel


